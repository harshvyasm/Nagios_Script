###############################################################################
# WINDOWS.CFG - SAMPLE CONFIG FILE FOR MONITORING A WINDOWS MACHINE
#
#
# NOTES: This config file assumes that you are using the sample configuration
#    files that get installed with the Nagios quickstart guide.
#
###############################################################################



###############################################################################
#
# HOST DEFINITIONS
#
###############################################################################

# Define a host for the Windows machine we'll be monitoring
# Change the host_name, alias, and address to fit your situation

define host {

    use                     windows-server          ; Inherit default values from a template
    host_name               Application-test         ; The name we're giving to this host
    alias                   Application Server      ; A longer name associated with the host
    address                 10.0.101.44             ; IP address of the host
    notifications_enabled   1
    notification_period     24x7
    notification_options    d,u,r,f,s
    notification_interval   5
    contact_groups          admins
    contacts                nagios
}

define host {

    use                     windows-server          ; Inherit default values from a template
    host_name               screening-test           ; The name we're giving to this host
    alias                   Screening Server        ; A longer name associated with the host
    address                 10.0.103.220             ; IP address of the host
    notifications_enabled   1
    notification_period     24x7
    notification_options    d,u,r,f,s
    notification_interval   5
    contact_groups          admins
    contacts                nagios
}

define host {

    use                     windows-server          ; Inherit default values from a template
    host_name               database-test            ; The name we're giving to this host
    alias                   Database Server         ; A longer name associated with the host
    address                 10.0.101.59             ; IP address of the host
    notifications_enabled   1
    notification_period     24x7
    notification_options    d,u,r,f,s
    notification_interval   5
    contact_groups          admins
    contacts                nagios
}

###############################################################################
#
# HOST GROUP DEFINITIONS
#
###############################################################################

# Define a hostgroup for Windows machines
# All hosts that use the windows-server template will automatically be a member of this group

define hostgroup {

    hostgroup_name          windows-servers         ; The name of the hostgroup
    alias                   Windows Servers         ; Long name of the group
}



###############################################################################
#
# SERVICE DEFINITIONS
#
###############################################################################

# Create a service for monitoring the version of NSCLient++ that is installed
# Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               Application-test
    service_description     NSClientversion
    check_command           check_nt!CLIENTVERSION
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}



 Create a service for monitoring the uptime of the server
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               Application-test
    service_description     Uptime
    check_command           check_nt!UPTIME
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}



 Create a service for monitoring CPU load
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               Application-test
    service_description     CPU Load
    check_command           check_nt!CPULOAD!-l 5,80,90
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}



 Create a service for monitoring memory usage
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               Application-test
    service_description     Memory Usage
    check_command           check_nt!MEMUSE!-w 80 -c 90
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}



 Create a service for monitoring C:\ disk usage
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               Application-test
    service_description     C Drive Space
    check_command           check_nt!USEDDISKSPACE!-l c -w 80 -c 90
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}



 Create a service for monitoring the W3SVC service
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               Application-test
    service_description     W3SVC
    check_command           check_nt!SERVICESTATE!-d SHOWALL -l W3SVC
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}

 Define a service to check HTTP on the local machine.
 Disable notifications for this service by default, as not all users may have HTTP enabled.

define service {

    use                     generic-service           ; Name of service template to use
    host_name               Application-test
    service_description     HTTPS
    check_command           check_http! -S -u /RegTechone
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}

 Define a service to check RegTechOne service is running on the local machine.

define service {

    use                     generic-service           ; Name of service template to use
    host_name               Application-test
    service_description     RegTechOne
    check_command           check_nt!SERVICESTATE!-d SHOWALL -l RegTechOneServiceHost
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   2
}

 Create a service for monitoring the version of NSCLient++ that is installed
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               screening-test
    service_description     NSClientversion
    check_command           check_nt!CLIENTVERSION
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}



 Create a service for monitoring the uptime of the server
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               screening-test
    service_description     Uptime
    check_command           check_nt!UPTIME
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}

 Create a service for monitoring CPU load
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               screening-test
    service_description     CPU Load
    check_command           check_nt!CPULOAD!-l 5,80,90
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}



 Create a service for monitoring memory usage
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               screening-test
    service_description     Memory Usage
    check_command           check_nt!MEMUSE!-w 80 -c 90
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}

 Create a service for monitoring C:\ disk usage
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               screening-test
    service_description     C Drive Space
    check_command           check_nt!USEDDISKSPACE!-l c -w 80 -c 90
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}

 Define a service to check HTTP on the local machine.
 Disable notifications for this service by default, as not all users may have HTTP enabled.

define service {

    use                     generic-service           ; Name of service template to use
    host_name               screening-test
    service_description     HTTPS
    check_command           check_http! -S -u /api/diag/nodes -p 8090
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}

 Create a service for monitoring the version of NSCLient++ that is installed
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               database-test
    service_description     NSClientversion
    check_command           check_nt!CLIENTVERSION
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}

 Create a service for monitoring the uptime of the server
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               database-test
    service_description     Uptime
    check_command           check_nt!UPTIME
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}


 Create a service for monitoring CPU load
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               database-test
    service_description     CPU Load
    check_command           check_nt!CPULOAD!-l 5,80,90
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}


 Create a service for monitoring memory usage
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               database-test
    service_description     Memory Usage
    check_command           check_nt!MEMUSE!-w 90 -c 95
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}

 Create a service for monitoring C:\ disk usage
 Change the host_name to match the name of the host you defined above

define service {

    use                     generic-service
    host_name               database-test
    service_description     C Drive Space
    check_command           check_nt!USEDDISKSPACE!-l c -w 80 -c 90
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}

 Define a service to check HTTP on the local machine.
 Disable notifications for this service by default, as not all users may have HTTP enabled.

define service {

    use                     generic-service
    host_name               database-test
    service_description     MSSQLserver
    check_command           check_nt!PROCSTATE!-d SHOWALL -l sqlservr.exe
    notifications_enabled   1
    notification_period     24x7
    notification_options    w,u,c,r,f,s
    check_interval          2
    notification_interval   5
}

 Create a service for monitoring the Explorer.exe process
 Change the host_name to match the name of the host you defined above

#define service {

#    use                     generic-service
#    host_name               winserver
#    service_description     Explorer
#    check_command           check_nt!PROCSTATE!-d SHOWALL -l Explorer.exe